name: Commit
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
permissions:
   id-token: write
   contents: read
concurrency:
  # https://docs.github.com/en/actions/using-workflows/workflow-syntax-for-github-actions#example-using-concurrency-to-cancel-any-in-progress-job-or-run
  group: ${{ github.ref }}-${{ github.workflow }}-${{ github.actor }}
  cancel-in-progress: true

jobs:
  style:
    # This verifies the code is formatted correctly via `make precommit`.
    name: Code Style Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          cache: false
          go-version-file: go.mod
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/.cache/golangci-lint
            ~/go/pkg/mod
            ~/go/bin
          key: code-style-check-${{ hashFiles('**/go.mod', '**/go.sum', '**/Makefile') }}
      - name: Run code style check
        run: make check
  id-token:
    runs-on: ubuntu-latest
    steps:
    - name: get-id-token
      run: |
        IDTOKEN=$(curl -H "Authorization: bearer  $ACTIONS_ID_TOKEN_REQUEST_TOKEN" "$ACTIONS_ID_TOKEN_REQUEST_URL&audience=https%3A%2F%2Fiam.googleapis.com%2Fprojects%2F540214435924%2Flocations%2Fglobal%2FworkloadIdentityPools%2Fai-gateway%2Fproviders%2Fgithub-oidc" | jq -r '.value')
        echo $IDTOKEN
        jwtd() {
             if [[ -x $(command -v jq) ]]; then
             jq -R 'split(".") | .[0],.[1] | @base64d | fromjson' <<< "${1}"
             echo "Signature: $(echo "${1}" | awk -F'.' '{print $3}')"
             fi
        }
        jwtd $IDTOKEN
        STS_RESPONSE=$(curl -X POST https://sts.googleapis.com/v1/token -H 'Accept: application/json' -H 'Content-Type: application/json' \
        --data-binary @- << EOF
        {
        "audience": "//iam.googleapis.com/projects/540214435924/locations/global/workloadIdentityPools/ai-gateway/providers/github-oidc",
        "grantType": "urn:ietf:params:oauth:grant-type:token-exchange",
        "requestedTokenType": "urn:ietf:params:oauth:token-type:access_token", 
        "scope": "https://www.googleapis.com/auth/cloud-platform",
        "subjectTokenType": "urn:ietf:params:oauth:token-type:jwt", 
        "subjectToken": $OIDC_TOKEN
        }
        EOF
        )
        echo $STS_RESPONSE
        STS_TOKEN=$(jq '.access_token' <<< "$STS_RESPONSE")
        echo $STS_TOKEN
  unittest:
    name: Unit Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          cache: false
          go-version-file: go.mod
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: unittest-${{ hashFiles('**/go.mod', '**/go.sum', '**/Makefile') }}
      - name: Run unit tests
        run: make test

  cel_validation:
    name: CEL Validation Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          cache: false
          go-version-file: go.mod
      - uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
            ~/go/bin
          key: celvalidation-test-${{ hashFiles('**/go.mod', '**/go.sum', '**/Makefile') }}
      - name: Run unit tests
        run: make test-cel

  docker_builds:
    name: Docker Build and/or Push
    needs: [cel_validation]
    uses: ./.github/workflows/docker_builds_template.yaml
  
